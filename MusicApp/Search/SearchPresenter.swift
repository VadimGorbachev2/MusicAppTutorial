//
//  SearchPresenter.swift
//  MusicApp
//
//  Created by Vadim  Gorbachev on 18.11.2019.
//  Copyright (c) 2019 Vadim  Gorbachev. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchPresentationLogic {
    func presentData(response: Search.Model.Response.ResponseType)
}

class SearchPresenter: SearchPresentationLogic {
  weak var viewController: SearchDisplayLogic?
  
  // MARK: Do something
  
  func presentData(response: Search.Model.Response.ResponseType) {
    switch response {
       case .some:
           print("presenter .some")
       case .presentTracks(let searchResults):
            let cells = searchResults?.results.map({ (track) in
            cellViewModel(from: track)
        }) ?? []
            
            let searchViewModel = SearchViewModel.init(cells: cells)
           print("presenter .presentTracks")
           viewController?.displayData(viewModel: Search.Model.ViewModel.ViewModelData.displayTracks(searchViewModel: searchViewModel))
    }
  }
    
    
    // MARK: переопределяю данные из json'a apple search api на удобные мне названия для vip
    
    private func cellViewModel(from track: Track) -> SearchViewModel.Cell {
        
        return SearchViewModel.Cell.init(iconUrlString: track.artworkUrl100,
                                         trackName: track.trackName,
                                         collectionName: track.collectionName ?? "",
                                         artistName: track.artistName)
    }
}
